// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=loadout1, b=loadout2, c=loadout3, d=loadout4, e=loadout5, f=loadout6, g=loadout7, h=loadout8);

    RAM8(in=in, load=loadout1, address=address[0..2], out=ram1);
    RAM8(in=in, load=loadout2, address=address[0..2], out=ram2);
    RAM8(in=in, load=loadout3, address=address[0..2], out=ram3);
    RAM8(in=in, load=loadout4, address=address[0..2], out=ram4);
    RAM8(in=in, load=loadout5, address=address[0..2], out=ram5);
    RAM8(in=in, load=loadout6, address=address[0..2], out=ram6);
    RAM8(in=in, load=loadout7, address=address[0..2], out=ram7);
    RAM8(in=in, load=loadout8, address=address[0..2], out=ram8);

    Mux8Way16(a=ram1, b=ram2, c=ram3, d=ram4, e=ram5, f=ram6, g=ram7, h=ram8, sel=address[3..5], out=out); 

}
